var app = require('../app');
var debug = require('debug')('lyriaactivi:server');
var http = require('http');
const { elogs } = require('lyria-logs');
const { APP_NAME, PORT } = require('../config/config');

var port = normalizePort(process.env.PORT || PORT);
app.set('port', port);

var server = http.createServer(app);

server.listen(port, ()=>{
  elogs.info(APP_NAME + " prendido en el puerto " + port)
});
server.on('error', onError);
server.on('listening', onListening);


function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

    switch (error.code) {
    case 'EACCES':
      elogs.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      elogs.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
